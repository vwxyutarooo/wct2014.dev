@charset "utf-8";
/* =============================================== */
/** extend */
/* ----------------------------------------------- */
// Table
%table{
  display: table;
  vertical-align: middle;
  >*{
    display: table-row;
    vertical-align: middle;
    >*{
      display: table-cell;
      vertical-align: middle;
    }
  }
}
// Clearfix
%group{
  &:after {
    display: block;
    visibility: hidden;
    clear: both;
    height: 0;
    content: ".";
    font-size:0;
  }
}

%baseWidth{
  margin-right: auto;
  margin-left: auto;
  max-width: 1080px;
  width: 100%;
}
%largeVariableWidth{
  width: 100%;
  max-width: 1400px;
  min-width: 840px;
  margin-right: auto;
  margin-left: auto;
}
%mediumWidth{
  width: 840px;
  margin-right: auto;
  margin-left: auto;
}
%narrowWidth{
  width: 716px;
  margin-right: auto;
  margin-left: auto;
}

%pseudoClass{
  display: block;
  content: "";
  position: absolute;
}

//***********************
// Sprite css image replacement (Medium size)
// @param $name
//***********************
@mixin sprite-ir-M($sprite) {
  @include sprite($sprite);
  display: block;
  overflow: hidden;
  padding-top: nth($sprite, 6);
  height: 0;
  background-repeat: no-repeat; 
}


//パーツ
%halfWidth-bg {
  position: absolute;
  display: block;
  width: 50%;
  height: 100%;
  content: "";
}

@keyframes fadeIn {
  0%{ opacity: 0; }
  100%{ opacity: 1; }
}
%fadeIn {
  animation-name: fadeIn;
  animation-duration: .5s;
  animation-fill-mode: both;
}
@keyframes hoverDown {
  0% { transform: translate(0, -500px); }
  100% { transform: translate(0 500px); }
}
@keyframes hovering {
  0% { transform: translate(0, 0px); }
  50% { transform: translate(0, 16px); }
  100% { transform: translate(0, -0px); }
}
%hoverDown {
  animation-name: hoverDown;
  animation-duration: 3s;
  animation-fill-mode: both;
  animation-iteration-count: 1;
}
%hovering {
  animation-name: hoverDown, hovering;
  animation-delay: 1s, 0.1s;
  animation-duration: 2s, 3s;
  animation-fill-mode: backwards, forwards;
  animation-iteration-count: 1, infinite;
  animation-timing-function: ease-in, ease-in-out;
  // animation: hoverDown ease-in 2000ms 1000ms 1 backwards normal, ease-in-out hovering 3000ms 100ms infinite forwards normal;
}